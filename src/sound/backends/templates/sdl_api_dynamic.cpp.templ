/**
 *
 * @file
 *
 * @brief  SDL subsystem API gate implementation
 *
 * @author vitamin.caig@gmail.com
 *
 **/

#include "sound/backends/gates/sdl_api.h"

#include "debug/log.h"
#include "platform/shared_library_adapter.h"

#include "make_ptr.h"
#include "string_view.h"

namespace Sound::Sdl
{
  class LibraryName : public Platform::SharedLibrary::Name
  {
  public:
    LibraryName() = default;

    StringView Base() const override
    {
      return "SDL"sv;
    }

    std::vector<StringView> PosixAlternatives() const override
    {
      return {"libSDL-1.2.so.0"sv};
    }

    std::vector<StringView> WindowsAlternatives() const override
    {
      return {};
    }
  };

<TMPL_INCLUDE NAME="api_dynamic.cpp.templ">

  Api::Ptr LoadDynamicApi()
  {
    static const LibraryName NAME;
    auto lib = Platform::SharedLibrary::Load(NAME);
    return MakePtr<DynamicApi>(std::move(lib));
  }
}  // namespace Sound::Sdl
