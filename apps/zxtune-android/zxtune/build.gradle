apply plugin: 'com.android.application'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "app.zxtune"
        minSdkVersion 14
        targetSdkVersion 29
        //supported languages
        resConfigs "en", "de", "ru", "es", "cs", "zh", "ja"
        //supported densities for vector drawables rasterization
        vectorDrawables.generatedDensities  "mdpi", "hdpi", "xhdpi", "xxhdpi"
    }

    buildFeatures {
        renderScript false
        shaders false
        dataBinding true
    }

    dexOptions {
        preDexLibraries false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }
}

configurations {
    developImplementation {}
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.appcompat:appcompat-resources:1.2.0'
    implementation 'androidx.media:media:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata:2.2.0"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-rc03'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation "androidx.room:room-runtime:2.2.5"
    annotationProcessor "androidx.room:room-compiler:2.2.5"

    developImplementation 'com.squareup.leakcanary:leakcanary-android:2.3'
}

apply from: "${treeRoot}/make/android/android.gradle"
apply from: "${treeRoot}/make/android/nativelibs.gradle"

// Testing related
android {
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    testOptions.unitTests.includeAndroidResources = true
}

dependencies {
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3.1'
}

android {
    defaultConfig {
        manifestPlaceholders += [
            modarchiveKey: localProperties.getProperty("key.modarchive"),
        ]

        def cdnRoot = localProperties.getProperty('cdn.root')
        if (cdnRoot != null) {
            buildConfigField("String", "CDN_ROOT", "\"${cdnRoot}\"")
        }
        def apiRoot = localProperties.getProperty('api.root')
        if (apiRoot != null) {
            buildConfigField("String", "API_ROOT", "\"${apiRoot}\"")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}
